package modbus

import (
	"github.com/jgulick48/lxp-bridge-go/internal/registers"
	"github.com/sirupsen/logrus"
	"testing"
)

type TestLogger struct {
	ParserCallback
}

func (tl *TestLogger) ReportValue(register registers.Register, value int32, dataLogger string) {
	logrus.Infof("%s: %v %s", register.Name, float32(value)*register.Multiplier, register.Unit)
}

func TestServer(t *testing.T) {
	testLogger := TestLogger{}
	Decode([]byte{161, 26, 5, 0, 111, 0, 1, 194, 66, 65, 51, 49, 49, 48, 49, 53, 53, 48, 97, 0, 1, 3, 51, 49, 57, 50, 54, 55, 48, 48, 54, 53, 0, 0, 80, 192, 130, 9, 0, 51, 49, 57, 50, 54, 55, 48, 48, 54, 53, 102, 65, 65, 66, 3, 27, 28, 1, 1, 0, 24, 12, 18, 21, 50, 57, 1, 0, 1, 0, 0, 0, 0, 0, 44, 0, 7, 0, 85, 99, 120, 5, 44, 1, 44, 1, 152, 8, 216, 9, 62, 23, 122, 23, 64, 8, 80, 10, 52, 8, 20, 5, 176, 4, 64, 11, 200, 0, 16, 0, 176, 4, 64, 11, 200, 0, 244, 225}, &testLogger)
	Decode([]byte{161, 26, 5, 0, 111, 0, 1, 194, 66, 65, 51, 49, 49, 48, 49, 53, 53, 48, 97, 0, 1, 3, 51, 49, 57, 50, 54, 55, 48, 48, 54, 53, 40, 0, 80, 16, 0, 80, 10, 218, 22, 232, 23, 48, 117, 48, 117, 18, 22, 56, 24, 16, 0, 16, 0, 18, 22, 56, 24, 16, 0, 16, 0, 44, 0, 48, 9, 160, 8, 144, 9, 32, 10, 0, 0, 100, 0, 100, 0, 232, 3, 232, 3, 100, 0, 100, 0, 120, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 122}, &testLogger)
	Decode([]byte{161, 26, 5, 0, 111, 0, 1, 194, 66, 65, 51, 49, 49, 48, 49, 53, 53, 48, 97, 0, 1, 3, 51, 49, 57, 50, 54, 55, 48, 48, 54, 53, 120, 0, 80, 2, 0, 0, 0, 0, 0, 0, 0, 160, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 23, 64, 22, 20, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144, 1, 48, 2, 215, 86}, &testLogger)
	command := BuildPacket("BA31101550", "3192670065", 0, 0x3, 0, 40)
	logrus.Infof("%v", command)
}
